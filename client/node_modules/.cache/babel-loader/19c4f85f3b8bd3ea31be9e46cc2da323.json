{"ast":null,"code":"/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Calls HTTP interceptor chain\r\n *\r\n * @param interceptors HTTP interceptor chain\r\n * @param client Terminating HTTP handler\r\n */\nfunction callHttpInterceptors(interceptors, client) {\n  var next = client;\n\n  var _loop_1 = function (index) {\n    var current = interceptors[index];\n    var last = next;\n\n    next = function (request, options) {\n      return current(request, options, last);\n    };\n  };\n\n  for (var index = interceptors.length - 1; index >= 0; index--) {\n    _loop_1(index);\n  }\n\n  return next;\n}\n/** Pass-through HTTP interceptor. */\n\n\nfunction passThroughInterceptor(request, requestOptions, next) {\n  return next(request, requestOptions);\n}\n\nexport { callHttpInterceptors, passThroughInterceptor };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/core/es/http/httpInterceptor.js"],"names":["callHttpInterceptors","interceptors","client","next","_loop_1","index","current","last","request","options","length","passThroughInterceptor","requestOptions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA8BC,YAA9B,EAA4CC,MAA5C,EAAoD;AAClD,MAAIC,IAAI,GAAGD,MAAX;;AAEA,MAAIE,OAAO,GAAG,UAAUC,KAAV,EAAiB;AAC7B,QAAIC,OAAO,GAAGL,YAAY,CAACI,KAAD,CAA1B;AACA,QAAIE,IAAI,GAAGJ,IAAX;;AAEAA,IAAAA,IAAI,GAAG,UAAUK,OAAV,EAAmBC,OAAnB,EAA4B;AACjC,aAAOH,OAAO,CAACE,OAAD,EAAUC,OAAV,EAAmBF,IAAnB,CAAd;AACD,KAFD;AAGD,GAPD;;AASA,OAAK,IAAIF,KAAK,GAAGJ,YAAY,CAACS,MAAb,GAAsB,CAAvC,EAA0CL,KAAK,IAAI,CAAnD,EAAsDA,KAAK,EAA3D,EAA+D;AAC7DD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACD;;AAED,SAAOF,IAAP;AACD;AACD;;;AAGA,SAASQ,sBAAT,CAAgCH,OAAhC,EAAyCI,cAAzC,EAAyDT,IAAzD,EAA+D;AAC7D,SAAOA,IAAI,CAACK,OAAD,EAAUI,cAAV,CAAX;AACD;;AAED,SAASZ,oBAAT,EAA+BW,sBAA/B","sourcesContent":["/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Calls HTTP interceptor chain\r\n *\r\n * @param interceptors HTTP interceptor chain\r\n * @param client Terminating HTTP handler\r\n */\nfunction callHttpInterceptors(interceptors, client) {\n  var next = client;\n\n  var _loop_1 = function (index) {\n    var current = interceptors[index];\n    var last = next;\n\n    next = function (request, options) {\n      return current(request, options, last);\n    };\n  };\n\n  for (var index = interceptors.length - 1; index >= 0; index--) {\n    _loop_1(index);\n  }\n\n  return next;\n}\n/** Pass-through HTTP interceptor. */\n\n\nfunction passThroughInterceptor(request, requestOptions, next) {\n  return next(request, requestOptions);\n}\n\nexport { callHttpInterceptors, passThroughInterceptor };"]},"metadata":{},"sourceType":"module"}