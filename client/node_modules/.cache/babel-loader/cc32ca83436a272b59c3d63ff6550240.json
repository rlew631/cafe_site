{"ast":null,"code":"var _jsxFileName = \"/Users/rlew/Documents/fullstack/cafe_site/src/components/order.js\";\nimport React, { Component } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Card, CardImg, CardText, CardBody, CardTitle, // CardSubtitle,\nContainer, Row, Col } from 'reactstrap'; // const useStyles = createUseStyles({\n//   main: {\n//     paddingTop: 90\n//   },\n//   cardCol: {\n//     paddingBottom: \"2em\"\n//   },\n//   card: {\n//     height:\"100%\",\n//   },\n//   services: {\n//     textAlign: 'left'\n//   },\n//   statement: {\n//     textAlign: 'left'\n//   }\n// });\n// const makeCards = () => {\n//   // console.log(data);\n//   return(\n//     data.map((d) =>\n//       <Card>\n//         <CardBody>\n//           <CardTitle tag=\"h3\">d.item_data.name</CardTitle>\n//           <CardText>\n//             {d.item_data.description}\n//             < br />\n//             {d.item_data.variations.item_variation_data.price_money.amount}\n//           </CardText>\n//         </CardBody>\n//       </Card>\n//     )\n//   );\n// }\n// renderItems(arr) {\n//   if(arr){\n//         return arr.map(({id, name}) => {\n//              return (\n//                  <li className=\"list-group-item\"\n//             key={id}\n//             onClick={() => this.props.onItemSelected(id)}>\n//                     {name}\n//                 </li>\n//             );\n//         });\n//      }\n//   }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction makeCards(arr) {\n  if (arr) {\n    return arr.map(d => {\n      console.log(d.item_data.variations.item_variation_data);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h3\",\n            children: \"d.item_data.name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: [d.item_data.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), d.item_data.variations.item_variation_data.price_money.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    });\n  }\n}\n\n;\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI() // this one works importing the square data\n    .then(res => this.setState({\n      data: res\n    })) //this one works logging the square data\n    // .then(res => console.log(res))\n    .catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  // const classes = useStyles();\n  //main part of the app\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 39\n      }, this), \"This is supposed to show the response from the catalog API:\", makeCards(this.state.data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/src/components/order.js"],"names":["React","Component","createUseStyles","Card","CardImg","CardText","CardBody","CardTitle","Container","Row","Col","makeCards","arr","map","d","console","log","item_data","variations","item_variation_data","description","price_money","amount","Order","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,eAAR,QAA8B,WAA9B;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,SALF,EAME;AACAC,SAPF,EAQEC,GARF,EASEC,GATF,QAUO,YAVP,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AAAE,MAAGA,GAAH,EAAO;AAC5B,WAAQA,GAAG,CAACC,GAAJ,CAASC,CAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,SAAF,CAAYC,UAAZ,CAAuBC,mBAAnC;AACA,0BACE,QAAC,IAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAA,uBACGL,CAAC,CAACG,SAAF,CAAYG,WADf,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGN,CAAC,CAACG,SAAF,CAAYC,UAAZ,CAAuBC,mBAAvB,CAA2CE,WAA3C,CAAuDC,MAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAdO,CAAR;AAgBH;AAAC;;AAAA;;AAEF,MAAMC,KAAN,SAAoBtB,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BuB,KAD4B,GACpB;AACJC,MAAAA,IAAI,EAAE;AADF,KADoB;;AAAA,SAgB5BC,cAhB4B,GAgBX,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAxB2B;AAAA;;AAK5BK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL,GACE;AADF,KAEGS,IAFH,CAEQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEW;AAAR,KAAd,CAFf,EAIE;AACA;AALF,KAOGE,KAPH,CAOSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CAPhB;AAQD,GAd2B,CAe1B;;;AAWF;AACA;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eACQ;AAAA;AAAA;AAAA;AAAA,cADR,eACc;AAAA;AAAA;AAAA;AAAA,cADd,eACoB;AAAA;AAAA;AAAA;AAAA,cADpB,eAC0B;AAAA;AAAA;AAAA;AAAA,cAD1B,eACgC;AAAA;AAAA;AAAA;AAAA,cADhC,iEAGG7B,SAAS,CAAC,KAAKa,KAAL,CAAWC,IAAZ,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAzD2B;;AA4D9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport {createUseStyles} from 'react-jss';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  // CardSubtitle,\n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n\n\n// const useStyles = createUseStyles({\n//   main: {\n//     paddingTop: 90\n//   },\n//   cardCol: {\n//     paddingBottom: \"2em\"\n//   },\n//   card: {\n//     height:\"100%\",\n//   },\n//   services: {\n//     textAlign: 'left'\n//   },\n//   statement: {\n//     textAlign: 'left'\n//   }\n// });\n\n// const makeCards = () => {\n//   // console.log(data);\n//   return(\n//     data.map((d) =>\n//       <Card>\n//         <CardBody>\n//           <CardTitle tag=\"h3\">d.item_data.name</CardTitle>\n//           <CardText>\n//             {d.item_data.description}\n//             < br />\n//             {d.item_data.variations.item_variation_data.price_money.amount}\n//           </CardText>\n//         </CardBody>\n//       </Card>\n//     )\n//   );\n// }\n\n// renderItems(arr) {\n//   if(arr){\n//         return arr.map(({id, name}) => {\n//              return (\n//                  <li className=\"list-group-item\"\n//             key={id}\n//             onClick={() => this.props.onItemSelected(id)}>\n//                     {name}\n//                 </li>\n//             );\n//         });\n//      }\n//   }\n\nfunction makeCards(arr){ if(arr){\n    return( arr.map((d) => {\n      console.log(d.item_data.variations.item_variation_data)\n      return(\n        <Card>\n          <CardBody>\n            <CardTitle tag=\"h3\">d.item_data.name</CardTitle>\n            <CardText>\n              {d.item_data.description}\n              < br />\n              {d.item_data.variations.item_variation_data.price_money.amount}\n            </CardText>\n          </CardBody>\n        </Card>\n      );\n    })\n  )\n}};\n\nclass Order extends Component {\n  state = {\n      data: null\n    };\n  \n  componentDidMount() {\n    this.callBackendAPI()\n      // this one works importing the square data\n      .then(res => this.setState({ data: res }))\n\n      //this one works logging the square data\n      // .then(res => console.log(res))\n\n      .catch(err => console.log(err));\n  }\n    // fetching the GET route from the Express server which matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  // const classes = useStyles();\n  //main part of the app\n  render() {\n    return (\n      <div>\n        <br /><br /><br /><br /><br /><br />\n        This is supposed to show the response from the catalog API: \n        {makeCards(this.state.data)}\n\n        {/* <p className=\"App-intro\">{JSON.stringify(this.state.data)}</p>\n        {console.log(this.state.data)} */}\n\n        {/* <p className=\"App-intro\">{typeof(this.state.data)}</p> */}\n        {/* <p className=\"App-intro\">{console.log(Array.isArray(this.state.data))}</p>  */}\n        \n        {/* { \n          this.state.data.map((d) => (\n            <Card>\n              <CardBody>\n                <CardTitle tag=\"h3\">d.item_data.name</CardTitle>\n                <CardText>\n                  {d.item_data.description}\n                  < br />\n                  {d.item_data.variations.item_variation_data.price_money.amount}\n                </CardText>\n              </CardBody>\n            </Card>\n          ))\n        } */}\n      </div>\n    );\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}