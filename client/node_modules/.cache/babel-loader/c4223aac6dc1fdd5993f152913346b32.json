{"ast":null,"code":"import { __values, __spreadArray, __read } from 'tslib';\nimport { isFileWrapper, cloneFileWrapper } from '../fileWrapper.js';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Array prefix format: item[1]=1&item[2]=2\r\n */\n\nvar indexedPrefix = function indexedPrefix(prefix, key) {\n  return prefix + \"[\" + key + \"]\";\n};\n/**\r\n * Converts an object to a list of key-value pairs for form-urlencoded serialization.\r\n *\r\n * @param obj The object to serialize\r\n * @param prefixFormat Formatting function to create key for nested arrays\r\n * @return Result of serialization\r\n */\n\n\nfunction formDataEncodeObject(obj, prefixFormat) {\n  var e_1, _a, _b, _c;\n\n  if (prefixFormat === void 0) {\n    prefixFormat = indexedPrefix;\n  }\n\n  var result = [];\n\n  try {\n    for (var _d = __values(Object.keys(obj)), _e = _d.next(); !_e.done; _e = _d.next()) {\n      var key = _e.value;\n      var value = obj[key];\n\n      if (value === null || value === undefined) {\n        continue;\n      } else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || typeof value === 'bigint') {\n        result.push({\n          key: key,\n          value: value.toString()\n        });\n      } else if (isFileWrapper(value)) {\n        result.push({\n          key: key,\n          value: cloneFileWrapper(value)\n        });\n      } else if (Array.isArray(value)) {\n        for (var iter = 0; iter < value.length; iter += 1) {\n          result.push.apply(result, __spreadArray([], __read(formDataEncodeObject((_b = {}, _b[prefixFormat(key, iter)] = value[iter], _b)))));\n        }\n      } else if (typeof value === 'object') {\n        for (var objectKey in value) {\n          if (Object.prototype.hasOwnProperty.call(value, objectKey)) {\n            var element = value[objectKey];\n            result.push.apply(result, __spreadArray([], __read(formDataEncodeObject((_c = {}, _c[indexedPrefix(key, objectKey)] = element, _c)))));\n          }\n        }\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Return a new list with all key-value pairs, which have a FileWrapper as value, removed\r\n *\r\n * @param params List of key-value pairs\r\n */\n\n\nfunction filterFileWrapperFromKeyValuePairs(params) {\n  return params.filter(function (p) {\n    return !isFileWrapper(p.value);\n  });\n}\n/**\r\n * Serializes an object for a form-urlencoded request.\r\n *\r\n * Nested and complex types in values will be flattened using {@link formDataEncodeObject() function} method.\r\n *\r\n * @param  obj The object to be serialized\r\n * @return The result of serialization\r\n */\n\n\nfunction urlEncodeObject(obj) {\n  var params = formDataEncodeObject(obj);\n  return urlEncodeKeyValuePairs(params);\n}\n/**\r\n * Serializes a list of key-value pairs for a form-urlencoded request.\r\n *\r\n * @param params List of key-value pairs to serialize\r\n * @return The result of serialization\r\n */\n\n\nfunction urlEncodeKeyValuePairs(params) {\n  var encode = encodeURIComponent;\n  return (params || []).map(function (p) {\n    return encode(p.key) + \"=\" + encode(p.value.toString());\n  }).join('&');\n}\n\nexport { filterFileWrapperFromKeyValuePairs, formDataEncodeObject, indexedPrefix, urlEncodeKeyValuePairs, urlEncodeObject };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/core/es/http/queryString.js"],"names":["__values","__spreadArray","__read","isFileWrapper","cloneFileWrapper","indexedPrefix","prefix","key","formDataEncodeObject","obj","prefixFormat","e_1","_a","_b","_c","result","_d","Object","keys","_e","next","done","value","undefined","push","toString","Array","isArray","iter","length","apply","objectKey","prototype","hasOwnProperty","call","element","e_1_1","error","return","filterFileWrapperFromKeyValuePairs","params","filter","p","urlEncodeObject","urlEncodeKeyValuePairs","encode","encodeURIComponent","map","join"],"mappings":"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","sourcesContent":["import { __values, __spreadArray, __read } from 'tslib';\nimport { isFileWrapper, cloneFileWrapper } from '../fileWrapper.js';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Array prefix format: item[1]=1&item[2]=2\r\n */\n\nvar indexedPrefix = function (prefix, key) {\n  return prefix + \"[\" + key + \"]\";\n};\n/**\r\n * Converts an object to a list of key-value pairs for form-urlencoded serialization.\r\n *\r\n * @param obj The object to serialize\r\n * @param prefixFormat Formatting function to create key for nested arrays\r\n * @return Result of serialization\r\n */\n\n\nfunction formDataEncodeObject(obj, prefixFormat) {\n  var e_1, _a, _b, _c;\n\n  if (prefixFormat === void 0) {\n    prefixFormat = indexedPrefix;\n  }\n\n  var result = [];\n\n  try {\n    for (var _d = __values(Object.keys(obj)), _e = _d.next(); !_e.done; _e = _d.next()) {\n      var key = _e.value;\n      var value = obj[key];\n\n      if (value === null || value === undefined) {\n        continue;\n      } else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || typeof value === 'bigint') {\n        result.push({\n          key: key,\n          value: value.toString()\n        });\n      } else if (isFileWrapper(value)) {\n        result.push({\n          key: key,\n          value: cloneFileWrapper(value)\n        });\n      } else if (Array.isArray(value)) {\n        for (var iter = 0; iter < value.length; iter += 1) {\n          result.push.apply(result, __spreadArray([], __read(formDataEncodeObject((_b = {}, _b[prefixFormat(key, iter)] = value[iter], _b)))));\n        }\n      } else if (typeof value === 'object') {\n        for (var objectKey in value) {\n          if (Object.prototype.hasOwnProperty.call(value, objectKey)) {\n            var element = value[objectKey];\n            result.push.apply(result, __spreadArray([], __read(formDataEncodeObject((_c = {}, _c[indexedPrefix(key, objectKey)] = element, _c)))));\n          }\n        }\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Return a new list with all key-value pairs, which have a FileWrapper as value, removed\r\n *\r\n * @param params List of key-value pairs\r\n */\n\n\nfunction filterFileWrapperFromKeyValuePairs(params) {\n  return params.filter(function (p) {\n    return !isFileWrapper(p.value);\n  });\n}\n/**\r\n * Serializes an object for a form-urlencoded request.\r\n *\r\n * Nested and complex types in values will be flattened using {@link formDataEncodeObject() function} method.\r\n *\r\n * @param  obj The object to be serialized\r\n * @return The result of serialization\r\n */\n\n\nfunction urlEncodeObject(obj) {\n  var params = formDataEncodeObject(obj);\n  return urlEncodeKeyValuePairs(params);\n}\n/**\r\n * Serializes a list of key-value pairs for a form-urlencoded request.\r\n *\r\n * @param params List of key-value pairs to serialize\r\n * @return The result of serialization\r\n */\n\n\nfunction urlEncodeKeyValuePairs(params) {\n  var encode = encodeURIComponent;\n  return (params || []).map(function (p) {\n    return encode(p.key) + \"=\" + encode(p.value.toString());\n  }).join('&');\n}\n\nexport { filterFileWrapperFromKeyValuePairs, formDataEncodeObject, indexedPrefix, urlEncodeKeyValuePairs, urlEncodeObject };"]},"metadata":{},"sourceType":"module"}