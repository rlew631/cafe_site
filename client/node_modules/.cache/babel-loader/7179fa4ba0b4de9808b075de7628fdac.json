{"ast":null,"code":"/**\r\n * Create an optional schema.\r\n *\r\n * The optional schema allows 'undefined' or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction optional(schema) {\n  return {\n    type: function () {\n      return \"Optional<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function (value, ctxt) {\n      return value === undefined ? undefined : schema.map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return value === undefined ? undefined : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      return value === undefined ? undefined : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return value === undefined ? undefined : schema.unmapXml(value, ctxt);\n    }\n  };\n}\n\nexport { optional };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/schema/es/types/optional.js"],"names":["optional","schema","type","validateBeforeMap","value","ctxt","undefined","validateBeforeUnmap","map","unmap","validateBeforeMapXml","mapXml","unmapXml"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAE,YAAY;AAChB,aAAO,cAAcD,MAAM,CAACC,IAAP,EAAd,GAA8B,GAArC;AACD,KAHI;AAILC,IAAAA,iBAAiB,EAAE,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACxC,aAAOD,KAAK,KAAKE,SAAV,GAAsB,EAAtB,GAA2BL,MAAM,CAACE,iBAAP,CAAyBC,KAAzB,EAAgCC,IAAhC,CAAlC;AACD,KANI;AAOLE,IAAAA,mBAAmB,EAAE,UAAUH,KAAV,EAAiBC,IAAjB,EAAuB;AAC1C,aAAOD,KAAK,KAAKE,SAAV,GAAsB,EAAtB,GAA2BL,MAAM,CAACM,mBAAP,CAA2BH,KAA3B,EAAkCC,IAAlC,CAAlC;AACD,KATI;AAULG,IAAAA,GAAG,EAAE,UAAUJ,KAAV,EAAiBC,IAAjB,EAAuB;AAC1B,aAAOD,KAAK,KAAKE,SAAV,GAAsBA,SAAtB,GAAkCL,MAAM,CAACO,GAAP,CAAWJ,KAAX,EAAkBC,IAAlB,CAAzC;AACD,KAZI;AAaLI,IAAAA,KAAK,EAAE,UAAUL,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,aAAOD,KAAK,KAAKE,SAAV,GAAsBA,SAAtB,GAAkCL,MAAM,CAACQ,KAAP,CAAaL,KAAb,EAAoBC,IAApB,CAAzC;AACD,KAfI;AAgBLK,IAAAA,oBAAoB,EAAE,UAAUN,KAAV,EAAiBC,IAAjB,EAAuB;AAC3C,aAAOD,KAAK,KAAKE,SAAV,GAAsB,EAAtB,GAA2BL,MAAM,CAACS,oBAAP,CAA4BN,KAA5B,EAAmCC,IAAnC,CAAlC;AACD,KAlBI;AAmBLM,IAAAA,MAAM,EAAE,UAAUP,KAAV,EAAiBC,IAAjB,EAAuB;AAC7B,aAAOD,KAAK,KAAKE,SAAV,GAAsBA,SAAtB,GAAkCL,MAAM,CAACU,MAAP,CAAcP,KAAd,EAAqBC,IAArB,CAAzC;AACD,KArBI;AAsBLO,IAAAA,QAAQ,EAAE,UAAUR,KAAV,EAAiBC,IAAjB,EAAuB;AAC/B,aAAOD,KAAK,KAAKE,SAAV,GAAsBA,SAAtB,GAAkCL,MAAM,CAACW,QAAP,CAAgBR,KAAhB,EAAuBC,IAAvB,CAAzC;AACD;AAxBI,GAAP;AA0BD;;AAED,SAASL,QAAT","sourcesContent":["/**\r\n * Create an optional schema.\r\n *\r\n * The optional schema allows 'undefined' or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction optional(schema) {\n  return {\n    type: function () {\n      return \"Optional<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function (value, ctxt) {\n      return value === undefined ? undefined : schema.map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return value === undefined ? undefined : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      return value === undefined ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      return value === undefined ? undefined : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return value === undefined ? undefined : schema.unmapXml(value, ctxt);\n    }\n  };\n}\n\nexport { optional };"]},"metadata":{},"sourceType":"module"}