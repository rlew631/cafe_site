{"ast":null,"code":"import { createSymmetricSchema, toValidator, isNumericString, coerceNumericStringToNumber } from '../utils.js';\n/** Create a number schema. */\n\nfunction number() {\n  return createSymmetricSchema({\n    type: 'number',\n    validate: toValidator(isNumericString),\n    map: coerceNumericStringToNumber\n  });\n}\n\nexport { number };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/schema/es/types/number.js"],"names":["createSymmetricSchema","toValidator","isNumericString","coerceNumericStringToNumber","number","type","validate","map"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,WAAhC,EAA6CC,eAA7C,EAA8DC,2BAA9D,QAAiG,aAAjG;AACA;;AAEA,SAASC,MAAT,GAAkB;AAChB,SAAOJ,qBAAqB,CAAC;AAC3BK,IAAAA,IAAI,EAAE,QADqB;AAE3BC,IAAAA,QAAQ,EAAEL,WAAW,CAACC,eAAD,CAFM;AAG3BK,IAAAA,GAAG,EAAEJ;AAHsB,GAAD,CAA5B;AAKD;;AAED,SAASC,MAAT","sourcesContent":["import { createSymmetricSchema, toValidator, isNumericString, coerceNumericStringToNumber } from '../utils.js';\n/** Create a number schema. */\n\nfunction number() {\n  return createSymmetricSchema({\n    type: 'number',\n    validate: toValidator(isNumericString),\n    map: coerceNumericStringToNumber\n  });\n}\n\nexport { number };"]},"metadata":{},"sourceType":"module"}