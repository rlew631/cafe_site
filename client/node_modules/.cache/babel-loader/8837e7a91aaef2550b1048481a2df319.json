{"ast":null,"code":"var _jsxFileName = \"/Users/rlew/Documents/fullstack/cafe_site/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Header from './components/header';\nimport Home from './components/home';\nimport Order from './components/order';\nimport Manufacturing from './components/manufacturing';\nimport ManufacturingMachining from './components/manufacturing-machining';\nimport ManufacturingPrinting from './components/manufacturing-printing';\nimport ManufacturingLaser from './components/manufacturing-laser';\nimport ManufacturingWelding from './components/manufacturing-welding';\nimport Contact from './components/contact';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI() // this one works with the string response\n    // .then(res => this.setState({ data: res.express }))\n    // this one works importing the square data\n    .then(res => this.setState({\n      data: res\n    })) //this one works logging the square data\n    // .then(res => console.log(res))\n    .catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  //main part of the app\n  render() {\n    // const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/order\",\n              component: Order\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/manufacturing\",\n              component: Manufacturing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contact\",\n              component: Contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/src/App.js"],"names":["React","Component","Header","Home","Order","Manufacturing","ManufacturingMachining","ManufacturingPrinting","ManufacturingLaser","ManufacturingWelding","Contact","BrowserRouter","Router","Switch","Route","App","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;AAMA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1Be,KAD0B,GAClB;AACJC,MAAAA,IAAI,EAAE;AADF,KADkB;;AAAA,SAmB1BC,cAnB0B,GAmBT,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KA3ByB;AAAA;;AAK1BK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL,GACE;AACA;AAEA;AAJF,KAKGS,IALH,CAKQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEW;AAAR,KAAd,CALf,EAOE;AACA;AARF,KAUGE,KAVH,CAUSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVhB;AAWD,GAjByB,CAkBxB;;;AAWF;AACAG,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAgB,cAAA,KAAK,EAAE,IAAvB;AAA6B,cAAA,SAAS,EAAE/B;AAAxC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,gBAAZ;AAA6B,cAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,SAAS,EAAEK;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAjDyB;;AAoD1B,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Header from './components/header';\nimport Home from './components/home'\nimport Order from './components/order';\nimport Manufacturing from './components/manufacturing';\nimport ManufacturingMachining from './components/manufacturing-machining';\nimport ManufacturingPrinting from './components/manufacturing-printing';\nimport ManufacturingLaser from './components/manufacturing-laser';\nimport ManufacturingWelding from './components/manufacturing-welding';\nimport Contact from './components/contact';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n      data: null\n    };\n  \n  componentDidMount() {\n    this.callBackendAPI()\n      // this one works with the string response\n      // .then(res => this.setState({ data: res.express }))\n\n      // this one works importing the square data\n      .then(res => this.setState({ data: res }))\n\n      //this one works logging the square data\n      // .then(res => console.log(res))\n\n      .catch(err => console.log(err));\n  }\n    // fetching the GET route from the Express server which matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  //main part of the app\n  render() {\n    // const classes = useStyles();\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header/>\n          <div>\n            <Switch>\n              <Route path=\"/\" exact={true} component={Home} ></Route>\n              <Route path=\"/order\" component={Order}></Route>\n              <Route path=\"/manufacturing\" component={Manufacturing}></Route>\n              <Route path=\"/contact\" component={Contact}></Route>\n            </Switch>\n            {/* <p className=\"App-intro\">{this.state.data}</p> */}\n            {/* <p className=\"App-intro\">{JSON.stringify(this.state.data)}</p> */}\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n  \n  export default App;\n\n"]},"metadata":{},"sourceType":"module"}