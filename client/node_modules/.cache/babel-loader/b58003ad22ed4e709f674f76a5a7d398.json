{"ast":null,"code":"var _jsxFileName = \"/Users/rlew/Documents/fullstack/cafe_site/src/components/order.js\";\nimport React, { Component } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Card, CardImg, CardText, CardBody, CardTitle, // CardSubtitle,\nContainer, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  main: {\n    paddingTop: 90\n  },\n  cardCol: {\n    paddingBottom: \"2em\"\n  },\n  card: {\n    height: \"100%\"\n  },\n  services: {\n    textAlign: 'left'\n  },\n  statement: {\n    textAlign: 'left'\n  }\n});\n\nfunction makeCards(data) {\n  console.log(data);\n  return data.map(d => /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h3\",\n        children: \"d.name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: [d.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), d.price_money]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n}\n\nclass Order extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI() // this one works importing the square data\n    .then(res => this.setState({\n      data: res\n    })) //this one works logging the square data\n    // .then(res => console.log(res))\n    .catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  // const classes = useStyles();\n  //main part of the app\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }, this), \"This is supposed to show the response from the catalog API:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: JSON.stringify(this.state.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: JSON.stringify(this.state.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \"makeCards(data)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/src/components/order.js"],"names":["React","Component","createUseStyles","Card","CardImg","CardText","CardBody","CardTitle","Container","Row","Col","useStyles","main","paddingTop","cardCol","paddingBottom","card","height","services","textAlign","statement","makeCards","data","console","log","map","d","description","price_money","Order","state","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","catch","err","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {createUseStyles} from 'react-jss';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  // CardSubtitle,\n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n\n\nconst useStyles = createUseStyles({\n  main: {\n    paddingTop: 90\n  },\n  cardCol: {\n    paddingBottom: \"2em\"\n  },\n  card: {\n    height:\"100%\",\n  },\n  services: {\n    textAlign: 'left'\n  },\n  statement: {\n    textAlign: 'left'\n  }\n});\n\nfunction makeCards(data){\n  console.log(data);\n  return(data.map((d) =>\n    <Card>\n      {/* <CardImg top width=\"100%\" src={haas} alt=\"Haas VF2SSYT CNC Machine\" /> */}\n      <CardBody>\n        <CardTitle tag=\"h3\">d.name</CardTitle>\n        <CardText>\n          {d.description}\n          < br />\n          {d.price_money}\n        </CardText>\n      </CardBody>\n    </Card>\n  ));\n}\n\nclass Order extends Component {\n  state = {\n      data: null\n    };\n  \n  componentDidMount() {\n    this.callBackendAPI()\n      // this one works importing the square data\n      .then(res => this.setState({ data: res }))\n\n      //this one works logging the square data\n      // .then(res => console.log(res))\n\n      .catch(err => console.log(err));\n  }\n    // fetching the GET route from the Express server which matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  // const classes = useStyles();\n  //main part of the app\n  render() {\n    return (\n      <div>\n        <br /><br /><br /><br /><br /><br />\n        This is supposed to show the response from the catalog API: \n        <p className=\"App-intro\">{JSON.stringify(this.state.data)}</p>\n        <p className=\"App-intro\">{JSON.stringify(this.state.data)}</p>\n        makeCards(data)\n      </div>\n    );\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}