{"ast":null,"code":"/**\r\n * Creates a nullable schema.\r\n *\r\n * The nullable schema allows null values or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction nullable(schema) {\n  return {\n    type: function type() {\n      return \"Nullable<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function validateBeforeMap(value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function validateBeforeUnmap(value, ctxt) {\n      return value === null ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function map(value, ctxt) {\n      return value === null ? null : schema.map(value, ctxt);\n    },\n    unmap: function unmap(value, ctxt) {\n      return value === null ? null : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function validateBeforeMapXml(value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function mapXml(value, ctxt) {\n      return value === null ? null : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function unmapXml(value, ctxt) {\n      return value === null ? null : schema.unmapXml(value, ctxt);\n    }\n  };\n}\n\nexport { nullable };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/schema/es/types/nullable.js"],"names":["nullable","schema","type","validateBeforeMap","value","ctxt","validateBeforeUnmap","map","unmap","validateBeforeMapXml","mapXml","unmapXml"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAE,gBAAY;AAChB,aAAO,cAAcD,MAAM,CAACC,IAAP,EAAd,GAA8B,GAArC;AACD,KAHI;AAILC,IAAAA,iBAAiB,EAAE,2BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACxC,aAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBH,MAAM,CAACE,iBAAP,CAAyBC,KAAzB,EAAgCC,IAAhC,CAA7B;AACD,KANI;AAOLC,IAAAA,mBAAmB,EAAE,6BAAUF,KAAV,EAAiBC,IAAjB,EAAuB;AAC1C,aAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBH,MAAM,CAACK,mBAAP,CAA2BF,KAA3B,EAAkCC,IAAlC,CAA7B;AACD,KATI;AAULE,IAAAA,GAAG,EAAE,aAAUH,KAAV,EAAiBC,IAAjB,EAAuB;AAC1B,aAAOD,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBH,MAAM,CAACM,GAAP,CAAWH,KAAX,EAAkBC,IAAlB,CAA/B;AACD,KAZI;AAaLG,IAAAA,KAAK,EAAE,eAAUJ,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,aAAOD,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBH,MAAM,CAACO,KAAP,CAAaJ,KAAb,EAAoBC,IAApB,CAA/B;AACD,KAfI;AAgBLI,IAAAA,oBAAoB,EAAE,8BAAUL,KAAV,EAAiBC,IAAjB,EAAuB;AAC3C,aAAOD,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBH,MAAM,CAACQ,oBAAP,CAA4BL,KAA5B,EAAmCC,IAAnC,CAA7B;AACD,KAlBI;AAmBLK,IAAAA,MAAM,EAAE,gBAAUN,KAAV,EAAiBC,IAAjB,EAAuB;AAC7B,aAAOD,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBH,MAAM,CAACS,MAAP,CAAcN,KAAd,EAAqBC,IAArB,CAA/B;AACD,KArBI;AAsBLM,IAAAA,QAAQ,EAAE,kBAAUP,KAAV,EAAiBC,IAAjB,EAAuB;AAC/B,aAAOD,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBH,MAAM,CAACU,QAAP,CAAgBP,KAAhB,EAAuBC,IAAvB,CAA/B;AACD;AAxBI,GAAP;AA0BD;;AAED,SAASL,QAAT","sourcesContent":["/**\r\n * Creates a nullable schema.\r\n *\r\n * The nullable schema allows null values or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction nullable(schema) {\n  return {\n    type: function () {\n      return \"Nullable<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function (value, ctxt) {\n      return value === null ? null : schema.map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return value === null ? null : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      return value === null ? null : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return value === null ? null : schema.unmapXml(value, ctxt);\n    }\n  };\n}\n\nexport { nullable };"]},"metadata":{},"sourceType":"module"}