{"ast":null,"code":"import { __assign } from 'tslib';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Wraps file with mime-type and filename to be sent as part of an HTTP request.\r\n */\n\nvar FileWrapper =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function FileWrapper(file, options) {\n    this.file = file;\n    this.options = options;\n    this.file = file;\n  }\n\n  return FileWrapper;\n}();\n/** Returns true if value is a FileWrapper */\n\n\nfunction isFileWrapper(value) {\n  return value instanceof FileWrapper;\n}\n/**\r\n * Returns a deep clone of the FileWrapper instance\r\n *\r\n * @param fileWrapper FileWrapper instance to copy\r\n */\n\n\nfunction cloneFileWrapper(fileWrapper) {\n  var options;\n\n  if (fileWrapper.options) {\n    options = cloneFileWrapperOptions(fileWrapper.options);\n  }\n\n  return new FileWrapper(fileWrapper.file, options);\n}\n\nfunction cloneFileWrapperOptions(fileWrapperOptions) {\n  var clone = __assign({}, fileWrapperOptions);\n\n  if (fileWrapperOptions.headers) {\n    clone.headers = __assign({}, fileWrapperOptions.headers);\n  }\n\n  return clone;\n}\n\nexport { FileWrapper, cloneFileWrapper, isFileWrapper };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/core/es/fileWrapper.js"],"names":["__assign","FileWrapper","file","options","isFileWrapper","value","cloneFileWrapper","fileWrapper","cloneFileWrapperOptions","fileWrapperOptions","clone","headers"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIC,WAAW;AACf;;AAEA;AACA,YAAY;AACV,WAASA,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;AAClC,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACD;;AAED,SAAOD,WAAP;AACD,CARD,EAJA;AAaA;;;AAGA,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,YAAYJ,WAAxB;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASK,gBAAT,CAA0BC,WAA1B,EAAuC;AACrC,MAAIJ,OAAJ;;AAEA,MAAII,WAAW,CAACJ,OAAhB,EAAyB;AACvBA,IAAAA,OAAO,GAAGK,uBAAuB,CAACD,WAAW,CAACJ,OAAb,CAAjC;AACD;;AAED,SAAO,IAAIF,WAAJ,CAAgBM,WAAW,CAACL,IAA5B,EAAkCC,OAAlC,CAAP;AACD;;AAED,SAASK,uBAAT,CAAiCC,kBAAjC,EAAqD;AACnD,MAAIC,KAAK,GAAGV,QAAQ,CAAC,EAAD,EAAKS,kBAAL,CAApB;;AAEA,MAAIA,kBAAkB,CAACE,OAAvB,EAAgC;AAC9BD,IAAAA,KAAK,CAACC,OAAN,GAAgBX,QAAQ,CAAC,EAAD,EAAKS,kBAAkB,CAACE,OAAxB,CAAxB;AACD;;AAED,SAAOD,KAAP;AACD;;AAED,SAAST,WAAT,EAAsBK,gBAAtB,EAAwCF,aAAxC","sourcesContent":["import { __assign } from 'tslib';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Wraps file with mime-type and filename to be sent as part of an HTTP request.\r\n */\n\nvar FileWrapper =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function FileWrapper(file, options) {\n    this.file = file;\n    this.options = options;\n    this.file = file;\n  }\n\n  return FileWrapper;\n}();\n/** Returns true if value is a FileWrapper */\n\n\nfunction isFileWrapper(value) {\n  return value instanceof FileWrapper;\n}\n/**\r\n * Returns a deep clone of the FileWrapper instance\r\n *\r\n * @param fileWrapper FileWrapper instance to copy\r\n */\n\n\nfunction cloneFileWrapper(fileWrapper) {\n  var options;\n\n  if (fileWrapper.options) {\n    options = cloneFileWrapperOptions(fileWrapper.options);\n  }\n\n  return new FileWrapper(fileWrapper.file, options);\n}\n\nfunction cloneFileWrapperOptions(fileWrapperOptions) {\n  var clone = __assign({}, fileWrapperOptions);\n\n  if (fileWrapperOptions.headers) {\n    clone.headers = __assign({}, fileWrapperOptions.headers);\n  }\n\n  return clone;\n}\n\nexport { FileWrapper, cloneFileWrapper, isFileWrapper };"]},"metadata":{},"sourceType":"module"}