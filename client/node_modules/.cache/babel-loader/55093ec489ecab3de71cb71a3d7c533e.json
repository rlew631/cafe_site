{"ast":null,"code":"import { __rest, __spreadArray, __read, __assign } from 'tslib';\nimport { objectKeyEncode, omitKeysFromObject, objectEntries, literalToString } from '../utils.js';\n/**\r\n * Create a Strict Object type schema.\r\n *\r\n * A strict-object does not allow additional properties during mapping or\r\n * unmapping. Additional properties will result in a validation error.\r\n */\n\nfunction strictObject(objectSchema) {\n  var schema = internalObject(objectSchema, false, false);\n\n  schema.type = function () {\n    return \"StrictObject<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create an Expandable Object type schema.\r\n *\r\n * The object schema allows additional properties during mapping and unmapping. The\r\n * additional properties are copied over as is.\r\n */\n\n\nfunction expandoObject(objectSchema) {\n  return internalObject(objectSchema, true, true);\n}\n/**\r\n * Create an Object Type schema.\r\n *\r\n * The Object schema allows additional properties during mapping and unmapping\r\n * but discards them.\r\n */\n\n\nfunction object(objectSchema) {\n  var schema = internalObject(objectSchema, true, false);\n\n  schema.type = function () {\n    return \"Object<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create a strict-object schema that extends an existing schema.\r\n */\n\n\nfunction extendStrictObject(parentObjectSchema, objectSchema) {\n  return strictObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an object schema that extends an existing schema.\r\n */\n\n\nfunction extendExpandoObject(parentObjectSchema, objectSchema) {\n  return expandoObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an Object schema that extends an existing object schema.\r\n */\n\n\nfunction extendObject(parentObjectSchema, objectSchema) {\n  return object(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Internal utility to create object schema with different options.\r\n */\n\n\nfunction internalObject(objectSchema, skipValidateAdditionalProps, mapAdditionalProps) {\n  var keys = Object.keys(objectSchema);\n  var reverseObjectSchema = createReverseObjectSchema(objectSchema);\n  var xmlMappingInfo = getXmlPropMappingForObjectSchema(objectSchema);\n  var xmlObjectSchema = createXmlObjectSchema(objectSchema);\n  var reverseXmlObjectSchema = createReverseXmlObjectSchema(xmlObjectSchema);\n  return {\n    type: function type() {\n      return \"Object<{\" + keys.map(objectKeyEncode).join(',') + \",...}>\";\n    },\n    validateBeforeMap: validateObject(objectSchema, 'validateBeforeMap', skipValidateAdditionalProps),\n    validateBeforeUnmap: validateObject(reverseObjectSchema, 'validateBeforeUnmap', skipValidateAdditionalProps),\n    map: mapObject(objectSchema, 'map', mapAdditionalProps),\n    unmap: mapObject(reverseObjectSchema, 'unmap', mapAdditionalProps),\n    validateBeforeMapXml: validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, skipValidateAdditionalProps),\n    mapXml: mapObjectFromXml(xmlObjectSchema, mapAdditionalProps),\n    unmapXml: unmapObjectToXml(reverseXmlObjectSchema, mapAdditionalProps),\n    objectSchema: objectSchema\n  };\n}\n\nfunction validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, allowAdditionalProperties) {\n  var elementsToProps = xmlMappingInfo.elementsToProps,\n      attributesToProps = xmlMappingInfo.attributesToProps;\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {}; // Validate all known elements and attributes using the schema\n\n    return __spreadArray(__spreadArray([], __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'child elements',\n      propTypePrefix: 'element',\n      valueTypeName: 'element',\n      propMapping: elementsToProps,\n      objectSchema: objectSchema,\n      valueObject: elements,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    }))), __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'attributes',\n      propTypePrefix: '@',\n      valueTypeName: 'element',\n      propMapping: attributesToProps,\n      objectSchema: objectSchema,\n      valueObject: attributes,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    })));\n  };\n}\n\nfunction mapObjectFromXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'mapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'mapXml', false // Always false; additional attributes are handled differently below.\n  ); // These are later used to omit know attribute props from the attributes object\n  // so that the remaining props can be copied over as additional props.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {};\n\n    var output = __assign(__assign({}, mapAttributes(attributes, ctxt)), mapElements(elements, ctxt));\n\n    if (allowAdditionalProps) {\n      // Omit known attributes and copy the rest as additional attributes.\n      var additionalAttrs = omitKeysFromObject(attributes, attributeKeys);\n\n      if (Object.keys(additionalAttrs).length > 0) {\n        // These additional attrs are set in the '$' property by convention.\n        output.$ = additionalAttrs;\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction unmapObjectToXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'unmapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'unmapXml', false // Always false so that element props are not copied during mapping\n  ); // These are later used to omit attribute props from the value object so that they\n  // do not get mapped during element mapping, if the allowAdditionalProps is true.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    // Get additional attributes which are set in the '$' property by convention\n    var _a = value,\n        attributes = _a.$,\n        rest = __rest(_a, [\"$\"]); // Ensure 'attributes' is an object and non-null\n\n\n    var additionalAttributes = typeof attributes === 'object' && attributes !== null && allowAdditionalProps ? attributes : {};\n    return __assign(__assign({}, mapElements(omitKeysFromObject(rest, attributeKeys), ctxt)), {\n      $: __assign(__assign({}, additionalAttributes), mapAttributes(value, ctxt))\n    });\n  };\n}\n\nfunction validateValueObject(_a) {\n  var validationMethod = _a.validationMethod,\n      propTypeName = _a.propTypeName,\n      propTypePrefix = _a.propTypePrefix,\n      valueTypeName = _a.valueTypeName,\n      propMapping = _a.propMapping,\n      objectSchema = _a.objectSchema,\n      valueObject = _a.valueObject,\n      ctxt = _a.ctxt,\n      allowAdditionalProperties = _a.allowAdditionalProperties;\n  var errors = [];\n  var missingProps = new Set();\n  var unknownProps = new Set(Object.keys(valueObject)); // Validate all known properties using the schema\n\n  for (var key in propMapping) {\n    if (Object.prototype.hasOwnProperty.call(propMapping, key)) {\n      var propName = propMapping[key];\n      var schema = objectSchema[propName][1];\n      unknownProps.delete(key);\n\n      if (key in valueObject) {\n        errors.push.apply(errors, __spreadArray([], __read(schema[validationMethod](valueObject[key], ctxt.createChild(propTypePrefix + key, valueObject[key], schema)))));\n      } else if (schema.type().indexOf('Optional<') !== 0) {\n        // Add to missing keys if it is not an optional property\n        missingProps.add(key);\n      }\n    }\n  } // Create validation error for unknown properties encountered\n\n\n  var unknownPropsArray = Array.from(unknownProps);\n\n  if (unknownPropsArray.length > 0 && !allowAdditionalProperties) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some unknown \" + propTypeName + \" were found in the \" + valueTypeName + \": \" + unknownPropsArray.map(literalToString).join(', ') + \".\"))));\n  } // Create validation error for missing required properties\n\n\n  var missingPropsArray = Array.from(missingProps);\n\n  if (missingPropsArray.length > 0) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some \" + propTypeName + \" are missing in the \" + valueTypeName + \": \" + missingPropsArray.map(literalToString).join(', ') + \".\"))));\n  }\n\n  return errors;\n}\n\nfunction validateObject(objectSchema, validationMethod, allowAdditionalProperties) {\n  var propsMapping = getPropMappingForObjectSchema(objectSchema);\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    return validateValueObject({\n      validationMethod: validationMethod,\n      propTypeName: 'properties',\n      propTypePrefix: '',\n      valueTypeName: 'object',\n      propMapping: propsMapping,\n      objectSchema: objectSchema,\n      valueObject: value,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    });\n  };\n}\n\nfunction mapObject(objectSchema, mappingFn, allowAdditionalProperties) {\n  return function (value, ctxt) {\n    var output = {};\n    var objectValue = value;\n    /** Properties seen in the object but not in the schema */\n\n    var unknownKeys = new Set(Object.keys(objectValue)); // Map known properties using the schema\n\n    for (var key in objectSchema) {\n      /* istanbul ignore else */\n      if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n        var element = objectSchema[key];\n        var propName = element[0];\n        var propValue = objectValue[propName];\n        unknownKeys.delete(propName); // Skip mapping for optional properties to avoid creating properties with value 'undefined'\n\n        if (element[1].type().indexOf('Optional<') !== 0 || propValue !== undefined) {\n          output[key] = element[1][mappingFn](propValue, ctxt.createChild(propName, propValue, element[1]));\n        }\n      }\n    } // Copy unknown properties over if additional properties flag is set\n\n\n    if (allowAdditionalProperties) {\n      unknownKeys.forEach(function (unknownKey) {\n        output[unknownKey] = objectValue[unknownKey];\n      });\n    }\n\n    return output;\n  };\n}\n\nfunction getXmlPropMappingForObjectSchema(objectSchema) {\n  var _a, _b;\n\n  var elementsToProps = {};\n  var attributesToProps = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var _c = __read(objectSchema[key], 3),\n          propName = _c[0],\n          xmlOptions = _c[2];\n\n      if ((xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) === true) {\n        attributesToProps[(_a = xmlOptions.xmlName) !== null && _a !== void 0 ? _a : propName] = key;\n      } else {\n        elementsToProps[(_b = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _b !== void 0 ? _b : propName] = key;\n      }\n    }\n  }\n\n  return {\n    elementsToProps: elementsToProps,\n    attributesToProps: attributesToProps\n  };\n}\n\nfunction getPropMappingForObjectSchema(objectSchema) {\n  var propsMapping = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var propDef = objectSchema[key];\n      propsMapping[propDef[0]] = key;\n    }\n  }\n\n  return propsMapping;\n}\n\nfunction createReverseObjectSchema(objectSchema) {\n  var reverseObjectSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n      reverseObjectSchema[element[0]] = [key, element[1], element[2]];\n    }\n  }\n\n  return reverseObjectSchema;\n}\n\nfunction createXmlObjectSchema(objectSchema) {\n  var _a;\n\n  var elementsSchema = {};\n  var attributesSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n\n      var _b = __read(element, 3),\n          serializedName = _b[0],\n          schema = _b[1],\n          xmlOptions = _b[2];\n\n      var xmlObjectSchema = (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) ? attributesSchema : elementsSchema;\n      xmlObjectSchema[key] = [(_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : serializedName, schema, xmlOptions];\n    }\n  }\n\n  return {\n    elementsSchema: elementsSchema,\n    attributesSchema: attributesSchema\n  };\n}\n\nfunction createReverseXmlObjectSchema(xmlObjectSchema) {\n  return {\n    attributesSchema: createReverseObjectSchema(xmlObjectSchema.attributesSchema),\n    elementsSchema: createReverseObjectSchema(xmlObjectSchema.elementsSchema)\n  };\n}\n\nexport { expandoObject, extendExpandoObject, extendObject, extendStrictObject, object, strictObject };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/schema/es/types/object.js"],"names":["__rest","__spreadArray","__read","__assign","objectKeyEncode","omitKeysFromObject","objectEntries","literalToString","strictObject","objectSchema","schema","internalObject","type","Object","keys","map","join","expandoObject","object","extendStrictObject","parentObjectSchema","extendExpandoObject","extendObject","skipValidateAdditionalProps","mapAdditionalProps","reverseObjectSchema","createReverseObjectSchema","xmlMappingInfo","getXmlPropMappingForObjectSchema","xmlObjectSchema","createXmlObjectSchema","reverseXmlObjectSchema","createReverseXmlObjectSchema","validateBeforeMap","validateObject","validateBeforeUnmap","mapObject","unmap","validateBeforeMapXml","validateObjectBeforeMapXml","mapXml","mapObjectFromXml","unmapXml","unmapObjectToXml","allowAdditionalProperties","elementsToProps","attributesToProps","value","ctxt","fail","valueObject","attrs","$","elements","attributes","validateValueObject","validationMethod","propTypeName","propTypePrefix","valueTypeName","propMapping","allowAdditionalProps","elementsSchema","attributesSchema","mapElements","mapAttributes","attributeKeys","_a","_b","_c","name","output","additionalAttrs","length","rest","additionalAttributes","errors","missingProps","Set","unknownProps","key","prototype","hasOwnProperty","call","propName","delete","push","apply","createChild","indexOf","add","unknownPropsArray","Array","from","missingPropsArray","propsMapping","getPropMappingForObjectSchema","mappingFn","objectValue","unknownKeys","element","propValue","undefined","forEach","unknownKey","xmlOptions","isAttr","xmlName","propDef","serializedName"],"mappings":"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","sourcesContent":["import { __rest, __spreadArray, __read, __assign } from 'tslib';\nimport { objectKeyEncode, omitKeysFromObject, objectEntries, literalToString } from '../utils.js';\n/**\r\n * Create a Strict Object type schema.\r\n *\r\n * A strict-object does not allow additional properties during mapping or\r\n * unmapping. Additional properties will result in a validation error.\r\n */\n\nfunction strictObject(objectSchema) {\n  var schema = internalObject(objectSchema, false, false);\n\n  schema.type = function () {\n    return \"StrictObject<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create an Expandable Object type schema.\r\n *\r\n * The object schema allows additional properties during mapping and unmapping. The\r\n * additional properties are copied over as is.\r\n */\n\n\nfunction expandoObject(objectSchema) {\n  return internalObject(objectSchema, true, true);\n}\n/**\r\n * Create an Object Type schema.\r\n *\r\n * The Object schema allows additional properties during mapping and unmapping\r\n * but discards them.\r\n */\n\n\nfunction object(objectSchema) {\n  var schema = internalObject(objectSchema, true, false);\n\n  schema.type = function () {\n    return \"Object<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create a strict-object schema that extends an existing schema.\r\n */\n\n\nfunction extendStrictObject(parentObjectSchema, objectSchema) {\n  return strictObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an object schema that extends an existing schema.\r\n */\n\n\nfunction extendExpandoObject(parentObjectSchema, objectSchema) {\n  return expandoObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an Object schema that extends an existing object schema.\r\n */\n\n\nfunction extendObject(parentObjectSchema, objectSchema) {\n  return object(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Internal utility to create object schema with different options.\r\n */\n\n\nfunction internalObject(objectSchema, skipValidateAdditionalProps, mapAdditionalProps) {\n  var keys = Object.keys(objectSchema);\n  var reverseObjectSchema = createReverseObjectSchema(objectSchema);\n  var xmlMappingInfo = getXmlPropMappingForObjectSchema(objectSchema);\n  var xmlObjectSchema = createXmlObjectSchema(objectSchema);\n  var reverseXmlObjectSchema = createReverseXmlObjectSchema(xmlObjectSchema);\n  return {\n    type: function () {\n      return \"Object<{\" + keys.map(objectKeyEncode).join(',') + \",...}>\";\n    },\n    validateBeforeMap: validateObject(objectSchema, 'validateBeforeMap', skipValidateAdditionalProps),\n    validateBeforeUnmap: validateObject(reverseObjectSchema, 'validateBeforeUnmap', skipValidateAdditionalProps),\n    map: mapObject(objectSchema, 'map', mapAdditionalProps),\n    unmap: mapObject(reverseObjectSchema, 'unmap', mapAdditionalProps),\n    validateBeforeMapXml: validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, skipValidateAdditionalProps),\n    mapXml: mapObjectFromXml(xmlObjectSchema, mapAdditionalProps),\n    unmapXml: unmapObjectToXml(reverseXmlObjectSchema, mapAdditionalProps),\n    objectSchema: objectSchema\n  };\n}\n\nfunction validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, allowAdditionalProperties) {\n  var elementsToProps = xmlMappingInfo.elementsToProps,\n      attributesToProps = xmlMappingInfo.attributesToProps;\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {}; // Validate all known elements and attributes using the schema\n\n    return __spreadArray(__spreadArray([], __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'child elements',\n      propTypePrefix: 'element',\n      valueTypeName: 'element',\n      propMapping: elementsToProps,\n      objectSchema: objectSchema,\n      valueObject: elements,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    }))), __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'attributes',\n      propTypePrefix: '@',\n      valueTypeName: 'element',\n      propMapping: attributesToProps,\n      objectSchema: objectSchema,\n      valueObject: attributes,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    })));\n  };\n}\n\nfunction mapObjectFromXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'mapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'mapXml', false // Always false; additional attributes are handled differently below.\n  ); // These are later used to omit know attribute props from the attributes object\n  // so that the remaining props can be copied over as additional props.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {};\n\n    var output = __assign(__assign({}, mapAttributes(attributes, ctxt)), mapElements(elements, ctxt));\n\n    if (allowAdditionalProps) {\n      // Omit known attributes and copy the rest as additional attributes.\n      var additionalAttrs = omitKeysFromObject(attributes, attributeKeys);\n\n      if (Object.keys(additionalAttrs).length > 0) {\n        // These additional attrs are set in the '$' property by convention.\n        output.$ = additionalAttrs;\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction unmapObjectToXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'unmapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'unmapXml', false // Always false so that element props are not copied during mapping\n  ); // These are later used to omit attribute props from the value object so that they\n  // do not get mapped during element mapping, if the allowAdditionalProps is true.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    // Get additional attributes which are set in the '$' property by convention\n    var _a = value,\n        attributes = _a.$,\n        rest = __rest(_a, [\"$\"]); // Ensure 'attributes' is an object and non-null\n\n\n    var additionalAttributes = typeof attributes === 'object' && attributes !== null && allowAdditionalProps ? attributes : {};\n    return __assign(__assign({}, mapElements(omitKeysFromObject(rest, attributeKeys), ctxt)), {\n      $: __assign(__assign({}, additionalAttributes), mapAttributes(value, ctxt))\n    });\n  };\n}\n\nfunction validateValueObject(_a) {\n  var validationMethod = _a.validationMethod,\n      propTypeName = _a.propTypeName,\n      propTypePrefix = _a.propTypePrefix,\n      valueTypeName = _a.valueTypeName,\n      propMapping = _a.propMapping,\n      objectSchema = _a.objectSchema,\n      valueObject = _a.valueObject,\n      ctxt = _a.ctxt,\n      allowAdditionalProperties = _a.allowAdditionalProperties;\n  var errors = [];\n  var missingProps = new Set();\n  var unknownProps = new Set(Object.keys(valueObject)); // Validate all known properties using the schema\n\n  for (var key in propMapping) {\n    if (Object.prototype.hasOwnProperty.call(propMapping, key)) {\n      var propName = propMapping[key];\n      var schema = objectSchema[propName][1];\n      unknownProps.delete(key);\n\n      if (key in valueObject) {\n        errors.push.apply(errors, __spreadArray([], __read(schema[validationMethod](valueObject[key], ctxt.createChild(propTypePrefix + key, valueObject[key], schema)))));\n      } else if (schema.type().indexOf('Optional<') !== 0) {\n        // Add to missing keys if it is not an optional property\n        missingProps.add(key);\n      }\n    }\n  } // Create validation error for unknown properties encountered\n\n\n  var unknownPropsArray = Array.from(unknownProps);\n\n  if (unknownPropsArray.length > 0 && !allowAdditionalProperties) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some unknown \" + propTypeName + \" were found in the \" + valueTypeName + \": \" + unknownPropsArray.map(literalToString).join(', ') + \".\"))));\n  } // Create validation error for missing required properties\n\n\n  var missingPropsArray = Array.from(missingProps);\n\n  if (missingPropsArray.length > 0) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some \" + propTypeName + \" are missing in the \" + valueTypeName + \": \" + missingPropsArray.map(literalToString).join(', ') + \".\"))));\n  }\n\n  return errors;\n}\n\nfunction validateObject(objectSchema, validationMethod, allowAdditionalProperties) {\n  var propsMapping = getPropMappingForObjectSchema(objectSchema);\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    return validateValueObject({\n      validationMethod: validationMethod,\n      propTypeName: 'properties',\n      propTypePrefix: '',\n      valueTypeName: 'object',\n      propMapping: propsMapping,\n      objectSchema: objectSchema,\n      valueObject: value,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    });\n  };\n}\n\nfunction mapObject(objectSchema, mappingFn, allowAdditionalProperties) {\n  return function (value, ctxt) {\n    var output = {};\n    var objectValue = value;\n    /** Properties seen in the object but not in the schema */\n\n    var unknownKeys = new Set(Object.keys(objectValue)); // Map known properties using the schema\n\n    for (var key in objectSchema) {\n      /* istanbul ignore else */\n      if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n        var element = objectSchema[key];\n        var propName = element[0];\n        var propValue = objectValue[propName];\n        unknownKeys.delete(propName); // Skip mapping for optional properties to avoid creating properties with value 'undefined'\n\n        if (element[1].type().indexOf('Optional<') !== 0 || propValue !== undefined) {\n          output[key] = element[1][mappingFn](propValue, ctxt.createChild(propName, propValue, element[1]));\n        }\n      }\n    } // Copy unknown properties over if additional properties flag is set\n\n\n    if (allowAdditionalProperties) {\n      unknownKeys.forEach(function (unknownKey) {\n        output[unknownKey] = objectValue[unknownKey];\n      });\n    }\n\n    return output;\n  };\n}\n\nfunction getXmlPropMappingForObjectSchema(objectSchema) {\n  var _a, _b;\n\n  var elementsToProps = {};\n  var attributesToProps = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var _c = __read(objectSchema[key], 3),\n          propName = _c[0],\n          xmlOptions = _c[2];\n\n      if ((xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) === true) {\n        attributesToProps[(_a = xmlOptions.xmlName) !== null && _a !== void 0 ? _a : propName] = key;\n      } else {\n        elementsToProps[(_b = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _b !== void 0 ? _b : propName] = key;\n      }\n    }\n  }\n\n  return {\n    elementsToProps: elementsToProps,\n    attributesToProps: attributesToProps\n  };\n}\n\nfunction getPropMappingForObjectSchema(objectSchema) {\n  var propsMapping = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var propDef = objectSchema[key];\n      propsMapping[propDef[0]] = key;\n    }\n  }\n\n  return propsMapping;\n}\n\nfunction createReverseObjectSchema(objectSchema) {\n  var reverseObjectSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n      reverseObjectSchema[element[0]] = [key, element[1], element[2]];\n    }\n  }\n\n  return reverseObjectSchema;\n}\n\nfunction createXmlObjectSchema(objectSchema) {\n  var _a;\n\n  var elementsSchema = {};\n  var attributesSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n\n      var _b = __read(element, 3),\n          serializedName = _b[0],\n          schema = _b[1],\n          xmlOptions = _b[2];\n\n      var xmlObjectSchema = (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) ? attributesSchema : elementsSchema;\n      xmlObjectSchema[key] = [(_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : serializedName, schema, xmlOptions];\n    }\n  }\n\n  return {\n    elementsSchema: elementsSchema,\n    attributesSchema: attributesSchema\n  };\n}\n\nfunction createReverseXmlObjectSchema(xmlObjectSchema) {\n  return {\n    attributesSchema: createReverseObjectSchema(xmlObjectSchema.attributesSchema),\n    elementsSchema: createReverseObjectSchema(xmlObjectSchema.elementsSchema)\n  };\n}\n\nexport { expandoObject, extendExpandoObject, extendObject, extendStrictObject, object, strictObject };"]},"metadata":{},"sourceType":"module"}