{"ast":null,"code":"var _jsxFileName = \"/Users/rlew/Documents/fullstack/cafe_site/src/components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react'; // import Badge from '@mui/core/BadgeUnstyled';\n\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Badge, Button, ButtonGroup, List, Drawer, Box, Divider, ListItem, ListItemIcon, ListItemText } from '@mui/material'; //https://mui.com/components/drawers/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  const [itemCount, setItemCount] = useState(1);\n  const [state, setState] = useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"food item 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"food item 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this); // return (\n  //   <div style={{ display: \"block\", padding: 30 }}>\n  //     <h4>Shopping Cart:</h4>\n  //     <div>\n  //       <Badge color=\"secondary\" badgeContent={itemCount}>\n  //         <ShoppingCartIcon />{\" \"}\n  //       </Badge>\n  //       <ButtonGroup>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(Math.max(itemCount - 1, 0));\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <RemoveIcon fontSize=\"small\" />\n  //         </Button>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(itemCount + 1);\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <AddIcon fontSize=\"small\" />\n  //         </Button>\n  //       </ButtonGroup>\n  //     </div>\n  //   </div>\n  // return (\n  //   <div>\n  //     {['left', 'right', 'top', 'bottom'].map((anchor) => (\n  //       <Fragment key={anchor}>\n  //         <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n  //         <Drawer\n  //           anchor={anchor}\n  //           open={state[anchor]}\n  //           onClose={toggleDrawer(anchor, false)}\n  //         >\n  //           {list(anchor)}\n  //         </Drawer>\n  //       </Fragment>\n  //     ))}\n  //   </div>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer('right', true),\n      children: \"view cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'right',\n      open: state['right'],\n      onClose: toggleDrawer('right', false),\n      children: list('right')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"oSJH1GCre6PLiCD7/jhU9pAoAlM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/src/components/Cart.js"],"names":["useState","Fragment","ShoppingCartIcon","AddIcon","RemoveIcon","Badge","Button","ButtonGroup","List","Drawer","Box","Divider","ListItem","ListItemIcon","ListItemText","Cart","itemCount","setItemCount","state","setState","right","toggleDrawer","anchor","open","event","type","key","list","width","map","text","index"],"mappings":"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","sourcesContent":["import { useState, Fragment } from 'react';\n// import Badge from '@mui/core/BadgeUnstyled';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  List,\n  Drawer,\n  Box,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material';\n\n//https://mui.com/components/drawers/\n\nfunction Cart() {\n  const [itemCount, setItemCount] = useState(1);\n  const [state, setState] = useState({right: false});\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <div>food item 1</div> : <div>food item 2</div>}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n  // return (\n  //   <div style={{ display: \"block\", padding: 30 }}>\n  //     <h4>Shopping Cart:</h4>\n  //     <div>\n  //       <Badge color=\"secondary\" badgeContent={itemCount}>\n  //         <ShoppingCartIcon />{\" \"}\n  //       </Badge>\n  //       <ButtonGroup>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(Math.max(itemCount - 1, 0));\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <RemoveIcon fontSize=\"small\" />\n  //         </Button>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(itemCount + 1);\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <AddIcon fontSize=\"small\" />\n  //         </Button>\n  //       </ButtonGroup>\n  //     </div>\n  //   </div>\n  // return (\n  //   <div>\n  //     {['left', 'right', 'top', 'bottom'].map((anchor) => (\n  //       <Fragment key={anchor}>\n  //         <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n  //         <Drawer\n  //           anchor={anchor}\n  //           open={state[anchor]}\n  //           onClose={toggleDrawer(anchor, false)}\n  //         >\n  //           {list(anchor)}\n  //         </Drawer>\n  //       </Fragment>\n  //     ))}\n  //   </div>\n  // );\n  return (\n    <div>\n          <Button onClick={toggleDrawer('right', true)}>view cart</Button>\n          <Drawer\n            anchor={'right'}\n            open={state['right']}\n            onClose={toggleDrawer('right', false)}\n          >\n            {list('right')}\n          </Drawer>\n    </div>\n  );\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}