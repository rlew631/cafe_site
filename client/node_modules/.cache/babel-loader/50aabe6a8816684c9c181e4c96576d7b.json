{"ast":null,"code":"var _jsxFileName = \"/Users/rlew/Documents/fullstack/cafe_site/src/components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react'; // import Badge from '@mui/core/BadgeUnstyled';\n\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Badge, Button, ButtonGroup, List, Drawer, Box, Divider, ListItem, ListItemIcon, ListItemText } from '@mui/material'; //https://mui.com/components/drawers/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  const [itemCount, setItemCount] = useState(1);\n  const [DrawerState, setDrawerState] = useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDrawerState({ ...Drawerstate,\n      [anchor]: open\n    });\n  }; // working sidebar code\n\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['food item 1', 'food item 2'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: [index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"food item 1 icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"food item 2 icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setItemCount(Math.max(itemCount - 1, 0));\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setItemCount(itemCount + 1);\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this); //working shopping cart badge code\n  // return (\n  //   <div style={{ display: \"block\", padding: 30 }}>\n  //     <h4>Shopping Cart:</h4>\n  //     <div>\n  //       <Badge color=\"secondary\" badgeContent={itemCount}>\n  //         <ShoppingCartIcon />{\" \"}\n  //       </Badge>\n  //       <ButtonGroup>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(Math.max(itemCount - 1, 0));\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <RemoveIcon fontSize=\"small\" />\n  //         </Button>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(itemCount + 1);\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <AddIcon fontSize=\"small\" />\n  //         </Button>\n  //       </ButtonGroup>\n  //     </div>\n  //   </div>\n  // return (\n  //   <div>\n  //     {['left', 'right', 'top', 'bottom'].map((anchor) => (\n  //       <Fragment key={anchor}>\n  //         <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n  //         <Drawer\n  //           anchor={anchor}\n  //           open={state[anchor]}\n  //           onClose={toggleDrawer(anchor, false)}\n  //         >\n  //           {list(anchor)}\n  //         </Drawer>\n  //       </Fragment>\n  //     ))}\n  //   </div>\n  // );\n  // working sidebar\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer('right', true),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"secondary\",\n        badgeContent: itemCount,\n        children: [/*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'right',\n      open: drawerState['right'],\n      onClose: toggleDrawer('right', false),\n      children: list('right')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"4Z3NKj9WxmcUqCBcrgSB4wguHjw=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/src/components/Cart.js"],"names":["useState","Fragment","ShoppingCartIcon","AddIcon","RemoveIcon","Badge","Button","ButtonGroup","List","Drawer","Box","Divider","ListItem","ListItemIcon","ListItemText","Cart","itemCount","setItemCount","DrawerState","setDrawerState","right","toggleDrawer","anchor","open","event","type","key","Drawerstate","list","width","map","text","index","Math","max","drawerState"],"mappings":"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","sourcesContent":["import { useState, Fragment } from 'react';\n// import Badge from '@mui/core/BadgeUnstyled';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  List,\n  Drawer,\n  Box,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material';\n\n//https://mui.com/components/drawers/\n\nfunction Cart() {\n  const [itemCount, setItemCount] = useState(1);\n  const [DrawerState, setDrawerState] = useState({right: false});\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState({ ...Drawerstate, [anchor]: open });\n  };\n\n  // working sidebar code\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <Divider />\n      <List>\n        {['food item 1', 'food item 2'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ?\n              <div>food item 1 icon</div> : <div>food item 2 icon</div>}\n              <ButtonGroup>\n                <Button\n                  onClick={() => {\n                    setItemCount(Math.max(itemCount - 1, 0));\n                  }}\n                >\n                  {\" \"}\n                  <RemoveIcon fontSize=\"small\" />\n                </Button>\n                <Button\n                  onClick={() => {\n                    setItemCount(itemCount + 1);\n                  }}\n                >\n                  {\" \"}\n                  <AddIcon fontSize=\"small\" />\n                </Button>\n              </ButtonGroup>\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n//working shopping cart badge code\n  // return (\n  //   <div style={{ display: \"block\", padding: 30 }}>\n  //     <h4>Shopping Cart:</h4>\n  //     <div>\n  //       <Badge color=\"secondary\" badgeContent={itemCount}>\n  //         <ShoppingCartIcon />{\" \"}\n  //       </Badge>\n  //       <ButtonGroup>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(Math.max(itemCount - 1, 0));\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <RemoveIcon fontSize=\"small\" />\n  //         </Button>\n  //         <Button\n  //           onClick={() => {\n  //             setItemCount(itemCount + 1);\n  //           }}\n  //         >\n  //           {\" \"}\n  //           <AddIcon fontSize=\"small\" />\n  //         </Button>\n  //       </ButtonGroup>\n  //     </div>\n  //   </div>\n  // return (\n  //   <div>\n  //     {['left', 'right', 'top', 'bottom'].map((anchor) => (\n  //       <Fragment key={anchor}>\n  //         <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n  //         <Drawer\n  //           anchor={anchor}\n  //           open={state[anchor]}\n  //           onClose={toggleDrawer(anchor, false)}\n  //         >\n  //           {list(anchor)}\n  //         </Drawer>\n  //       </Fragment>\n  //     ))}\n  //   </div>\n  // );\n\n// working sidebar\n  return (\n    <div>\n          <Button onClick={toggleDrawer('right', true)}>\n            <Badge color=\"secondary\" badgeContent={itemCount}>\n              <ShoppingCartIcon />{\" \"}\n            </Badge>\n          </Button>\n          <Drawer\n            anchor={'right'}\n            open={drawerState['right']}\n            onClose={toggleDrawer('right', false)}\n          >\n            {list('right')}\n          </Drawer>\n    </div>\n  );\n\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}