{"ast":null,"code":"import { createSymmetricSchema, toValidator, coerceStringOrNumberToBigInt } from '../utils.js';\n\nfunction isValidBigIntValue(value) {\n  return typeof value === 'bigint' || typeof value === 'number' || typeof value === 'string' && /^-?\\d+$/.test(value);\n}\n/** Create a bigint schema */\n\n\nfunction bigint() {\n  return createSymmetricSchema({\n    type: 'bigint',\n    validate: toValidator(isValidBigIntValue),\n    map: coerceStringOrNumberToBigInt\n  });\n}\n\nexport { bigint };","map":{"version":3,"sources":["/Users/rlew/Documents/fullstack/cafe_site/node_modules/@apimatic/schema/es/types/bigint.js"],"names":["createSymmetricSchema","toValidator","coerceStringOrNumberToBigInt","isValidBigIntValue","value","test","bigint","type","validate","map"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,WAAhC,EAA6CC,4BAA7C,QAAiF,aAAjF;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,IAA0D,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,UAAUC,IAAV,CAAeD,KAAf,CAA9F;AACD;AACD;;;AAGA,SAASE,MAAT,GAAkB;AAChB,SAAON,qBAAqB,CAAC;AAC3BO,IAAAA,IAAI,EAAE,QADqB;AAE3BC,IAAAA,QAAQ,EAAEP,WAAW,CAACE,kBAAD,CAFM;AAG3BM,IAAAA,GAAG,EAAEP;AAHsB,GAAD,CAA5B;AAKD;;AAED,SAASI,MAAT","sourcesContent":["import { createSymmetricSchema, toValidator, coerceStringOrNumberToBigInt } from '../utils.js';\n\nfunction isValidBigIntValue(value) {\n  return typeof value === 'bigint' || typeof value === 'number' || typeof value === 'string' && /^-?\\d+$/.test(value);\n}\n/** Create a bigint schema */\n\n\nfunction bigint() {\n  return createSymmetricSchema({\n    type: 'bigint',\n    validate: toValidator(isValidBigIntValue),\n    map: coerceStringOrNumberToBigInt\n  });\n}\n\nexport { bigint };"]},"metadata":{},"sourceType":"module"}